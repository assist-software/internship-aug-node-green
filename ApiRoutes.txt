
                                        Rute pentru autentificare:

    Login
    /api/auth/login
        method: POST
        payload: { 
            email: <string required>, 
            password: <string required> 
        } 

    Register
    /api/auth/register
        method: POST
        payload: {
            first_name: <string required>,
            last_name: <string  required>,
            email: <string  required>,
            password: <string  required>,
            confirm_password: <string  required>,
            roleId: <integer  required>,
            gender: <string optional>,
            primarySport: <string optional>,
            secondarySport: <string optional>,
            height: <double optional>,
            weight: <double optional>,
            age: <integer optional>,
            profile_photo: <blob optional>
        }

    Reset-password
    /api/auth/reset-password
        method: POST
        payload: { email: <string required> } 


                                        Rute pentru user:

    Create user
        /api/user/create
            method: POST
            payload: {
                first_name: <string required>,
                last_name: <string  required>,
                email: <string  required>,
                password: <string  required>,
                confirm_password: <string  required>,
                roleId: <integer  required>,
                gender: <string optional>,
                primarySport: <string optional>,
                secondarySport: <string optional>,
                height: <double optional>,
                weight: <double optional>,
                age: <integer optional>,
                profile_photo: <blob optional>
            }

    Search by name
        /api/user/search
            method: POST
            payload: {
                search_query: <string required>
            }

    Update user 
        /api/user/:userId
            method: PUT
            payload: {
                first_name: <string required>,
                last_name: <string  required>,
                email: <string  required>,
                password: <string  required>,
                confirm_password: <string  required>,
                roleId: <integer  required>,
                gender: <string optional>,
                primarySport: <string optional>,
                secondarySport: <string optional>,
                height: <double optional>,
                weight: <double optional>,
                age: <integer optional>,
                profile_photo: <blob optional>
            }

    Get user by id
        /api/user/:userId
            method: GET
            payload: {}

    Delete user by id
        /api/user/:userId
            method: DELETE
            payload: {}

                                        Rute pentru coach:

    Create coach
        /api/coach
            method: POST
            payload: {
                first_name: <string required>,
                last_name: <string  required>,
                email: <string  required>,
                password: <string  required>,
                confirm_password: <string  required>,
                roleId: <integer  required>,
                gender: <string optional>,
                primarySport: <string optional>,
                secondarySport: <string optional>,
                height: <double optional>,
                weight: <double optional>,
                age: <integer optional>,
                profile_photo: <blob optional>
            }

    Update coach by id
            /api/coach/:coachId
                method: PUT
                payload: {
                    first_name: <string required>,
                    last_name: <string  required>,
                    email: <string  required>,
                    password: <string  required>,
                    confirm_password: <string  required>,
                    roleId: <integer  required>,
                    gender: <string optional>,
                    primarySport: <string optional>,
                    secondarySport: <string optional>,
                    height: <double optional>,
                    weight: <double optional>,
                    age: <integer optional>,
                    profile_photo: <blob optional>
                }

    Get coach by id
            /api/coach/:coachId
                method: GET
                payload: {}

    Get list of coach
            /api/coach
                method: GET
                payload: {}

    Delete coach
            /api/coach/:coachId
                method: DELETE
                payload: {}

                                        Rute pentru event:

    Create event
        /api/event/create
            method: POST
            payload: {
                clubId: <integer required>
                date: <date  required>
                time: <time required>
                name: <string required)
                description: <text required>
                location: <string required>
                radius: <double optional>
                sportId: <string optional>
                invite_members: <Array<String> optional>
                event_cover: <BLOB  required>
            }

    Search event
        /api/event/search
            method: POST
            payload: {
                name: <string required>
            }

    Get event by Id
        /api/event/:eventId
            method: GET
            payload: {}

    Update event by Id
        /api/event/:eventId
            method: GET
            payload: {
                clubId: <integer required>
                date: <date  required>
                time: <time required>
                name: <string required)
                description: <text required>
                location: <string required>
                radius: <double optional>
                sportId: <string optional>
                invite_members: <Array<String> optional>
                event_cover: <BLOB  required>
            }

    Delete event
        /api/event/:eventId
            method: DELETE
            payload: {}


                                        Rute pentru event-member:

    Create member
        /api/event/member/create
            method: POST
            payload: {
                userId: <integer required>
                eventId: <integer required>
            }
    List members by event Id
        /api/event/member/:eventId
            method: GET
            payload: {}

    Delete a member by inviteId
        /api/event/member/:memberId

                                        Rute pentru event-request
    
    Create new event-request
        /api/event/request/create
            method: POST
            payload: {
                userId: <integer required>
                eventId: <integer required>
            }

    Accept request
        /api/event/request/accept/:requestId
            method: POST
            payload: {}

    Decline request
        /api/event/request/accept/:requestId
            method: DELETE
            payload: {}

    Get list of requests by event Id
        /api/event/request/:eventId
            method: GET
            payload: {}

                                        Rute pentru event-invite        
    
    Create a new event-invite
        /api/event/invite/create
            method: POST
            payload: {
                email: <string required>
                eventId: <integer required>
            }

    Decline event-invite
        /api/event/invite/decline/:inviteId
            method: DELETE
            payload: {}

    Get list of event-invite by eventId
        /api/event/invite/:eventId
            method: GET
            payload: {}

    Accept event-invite
        /api/event/invite/accept/:inviteId
            method: POST
            payload: {}

                                        Rute pentru workout

    Create workout
        /api/workout/create
            method: POST
            payload: {          
                eventId: <integer required>
                duration: <double required>
                heart_rate: <double required>
                calories: <double required>
                avg_speed: <double required>
                distance: <double required>
                workout_effectiveness: <string required>
            }

    Update workout
        /api/workout/:workoutId
            method: PUT
            payload: {          
                eventId: <integer required>
                duration: <double required>
                heart_rate: <double required>
                calories: <double required>
                avg_speed: <double required>
                distance: <double required>
                workout_effectiveness: <string required>
            }

    Get workout by Id
        /api/workout/:workoutId
            method: GET
            payload: {}

    Search workout by
        /api/workout/search

    Delete workout by id
        /api/workout/:workoutId
            method: DELETE
            payload: {
                eventId: <integer optional>
                duration: <double optional>
                heart_rate: <double optional>
                calories: <double optional>
                avg_speed: <double optional>
                distance: <double optional>
                workout_effectiveness: <string optional>
            }

                                        Rute pentru club
                        
    Create club
        /api/club/create
            method: POST
            payload: {
                ownerId: <integer required>
                name: <string required>
                invite_members: <Array<string> optional>
            }

    Update club
        /api/club/:id
            method: PUT
            payload: {
                ownerId: <integer required>
                name: <string required>
                invite_members: <Array<string> optional>
            }

    Get club by id
        /api/club/:id
            method: GET
            payload: {}

    Get all list of clubs
        /api/club
            method: GET
            payload: {}

    Search club by name or owner
        /api/club/search
            method: POST
            payload: {
                ownerId: <integer optional>
                name: <string optional>
            }

    Delete club by Id
        /api/club/:id
            method: DELETE
            payload: {}

                                        Rute pentru club-request

    Create club request
        /api/club/request/create
            method: POST
            payload: {
                userId: <integer required>
                clubId: <integer required>
            }

    Accept club request
        /api/club/request/accept/:requestId
            method: POST
            payload: {}

    Decline club request
        /api/club/request/decline/:requestId
            method: DELETE
            payload: {}

    Get club request by id
        /api/club/request/:clubId
            method: GET
            payload: {}
